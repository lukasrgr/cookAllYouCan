var proto = require('proto')

var Gem = require('../Gem')
var Style = require("Style")

var Header = require("./Header");
var Row = require("./Row");
var Cell = require("./Cell");

module.exports = proto(Gem, function(superclass) {

	// static properties

    this.name = 'Table'

    this.defaultStyle = Style({
        borderSpacing: 0
    })

    this.Row = Row
	this.Header = Header
    this.Cell = Cell


	// instance properties

	this.init = function(/*[label,] tableInit*/) {
		if(arguments[0] instanceof Array) {
            var tableInit = arguments[0]
        } else {
            var label = arguments[0]
            var tableInit = arguments[1]
        }

        this.domNode = document.createElement("table") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
        this.label = label

        this.children = [] // need children before calling add
        if(tableInit !== undefined) {
            for(var n=0; n<tableInit.length; n++) {
                this.row(tableInit[n])
            }
        }

        superclass.init.apply(this, arguments) // superclass constructor
	}
	
	this.header = function(/*[]label,] listOfBlocksOrText*/) {
        return headerOrRegularRow(this, Header, arguments)
	}

	this.row = function() {
		return headerOrRegularRow(this, Row, arguments)
	}
});

function headerOrRegularRow(that, Prototype, args) {
    var row = Prototype.apply(undefined, args)
    that.add(row)
    return row
}