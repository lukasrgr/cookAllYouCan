var Gem = require('Gem')
var proto = require('proto')

module.exports = proto(Gem, function(superclass) {

    //static properties

    this.name = 'Image'

    this.init = function(/*[label,] imageSource*/) {
        if(arguments.length === 1) {
            var imageSource = arguments[0]
        } else {
            var label = arguments[0]
            var imageSource = arguments[1]
        }

        this.domNode = document.createElement('img') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
        this.label = label
        if(imageSource !==  undefined) this.src = imageSource

        superclass.init.apply(this, arguments) // superclass constructor
    }

    // instance properties

    Object.defineProperty(this, 'src', {
        get: function() {
            return this.domNode.src
        }, set: function(v) {
            this.domNode.src = v
        }
    })
});
