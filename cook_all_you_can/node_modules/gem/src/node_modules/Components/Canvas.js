var Gem = require('Gem')
var proto = require('proto')
var Style = require("Style")

module.exports = proto(Gem, function(superclass) {

    //static properties

    this.name = 'Canvas'

    this.init = function(/*[label,] height, width*/) {
        if(arguments.length === 2) {
            var height = arguments[0]
            var width = arguments[1]
        } else {
            var label = arguments[0]
            var height = arguments[1]
            var width = arguments[2]
        }

        this.domNode = document.createElement('canvas') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it

        this.label = label
        this.height = height
        this.width = width

        superclass.init.apply(this, arguments) // superclass constructor
    }

    // instance properties

    Object.defineProperty(this, 'width', {
        get: function() {
            return this.domNode.width
        }, set: function(v) {
            this.domNode.width = v
        }
    })
    Object.defineProperty(this, 'height', {
        get: function() {
            return this.domNode.height
        }, set: function(v) {
            this.domNode.height = v
        }
    })

    this.context = function() {
        return this.domNode.getContext.apply(this.domNode, arguments)
    }

    this.toImg = this.toDataURL = function() {
        return this.domNode.toDataURL()
    }
});
