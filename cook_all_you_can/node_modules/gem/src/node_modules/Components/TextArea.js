var proto = require('proto')

var Gem = require('../Gem')
var domUtils = require("domUtils")

module.exports = proto(Gem, function(superclass) {

	// static variables

    this.name = 'TextArea'

	this.init = function(label) {
        this.domNode = document.createElement("textarea") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
        this.label = label

        superclass.init.apply(this, arguments) // superclass constructor
           
        domUtils.setupBoundProperty(this,this.quiet,'val', {
            getFn: getVal, 
            setFn: function(x) {
                setVal.bind(this)(x, true)   
            }
        })
	}


	// instance properties

    Object.defineProperty(this, 'val', {        
        get: getVal, set: setVal
    })
    
    
    // returns the TextArea's value
    function getVal() {
        return this.domNode.value
    }
    // sets the value of the TextArea
    function setVal(value, quiet) {
        if(this.val === value) return; // do nothing if there's no change

        this.domNode.value = value
        if(!quiet) this.emit('change')
    }
})