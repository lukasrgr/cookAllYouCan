var Gem = require('../Gem')
var proto = require('proto')
var Style = require("Style")

module.exports = proto(Gem, function(superclass) {

	// static properties

	this.name = 'TableCell'

    this.defaultStyle = Style({
        display: 'table-cell'
    })
	

	// instance properties

	this.init = function(/*[label,] contents*/) {
        if(arguments.length <= 1) {
            var contents = arguments[0]
        } else {
            var label = arguments[0]
            var contents = arguments[1]
        }

        this.domNode = document.createElement("td") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
		this.label = label

        this.children = [] // need children before calling add
        if(contents instanceof Gem || typeof(contents) !== 'string') {
            this.add(contents)
        } else if(contents !== undefined) {
            this.domNode.textContent = contents
        }

        superclass.init.apply(this, arguments) // superclass constructor
	}

	this.colspan = function(cols) {
		this.attr('colspan',cols);
	}
});
