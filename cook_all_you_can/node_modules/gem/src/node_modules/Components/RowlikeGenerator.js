var proto = require('proto')

var Gem = require('Gem')
var Style = require("Style")
var Cell = require("./Cell");

// generates either a Header or a Row, depending on what you pass in
// elementType should either be "tr" or "th
// name should either be "Header" or "Row
module.exports = function(elementType, name) {
    return proto(Gem, function(superclass) {

        // static properties

        this.name = name

        this.defaultStyle = Style({
            display: 'table-row'
        })


        // instance properties

        this.init = function(/*[label,] rowInit*/) {
            if(arguments[0] instanceof Array) {
                var rowInit = arguments[0]
            } else {
                var label = arguments[0]
                var rowInit = arguments[1]
            }

            this.domNode = document.createElement(elementType) // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it
            this.label = label
            this.children = [] // need children before calling add

            if(rowInit !== undefined) {
                for(var n=0; n<rowInit.length; n++) {
                    this.cell(rowInit[n])
                }
            }

            superclass.init.apply(this, arguments) // superclass constructor
        }

        this.cell = function(/*[label,] contents*/) {
            var cell = Cell.apply(undefined, arguments);
            this.add(cell);
            return cell;
        }
    })
}