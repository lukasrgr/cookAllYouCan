// requires: syn (loaded as a global variable from an html script tag)

var Future = require('async-future')

exports.click = wrap(syn.click)
exports.rightClick = wrap(syn.rightClick)
exports.dblClick = wrap(syn.dblClick)
exports.move = wrap(syn.move)
exports.type = wrap(syn.type)
exports.key = wrap(syn.key)



function wrap(fn) {
    return function() {
        var resultFuture = Future.wrapSingleParameter(fn).apply(this,arguments)

        // for chaining
        var target = arguments[0]
        resultFuture.click = function() {
            exports.click.apply(this, [target].concat(arguments))
        }
        resultFuture.rightClick = function() {
            exports.rightClick.apply(this, [target].concat(arguments))
        }
        resultFuture.dblClick = function() {
            exports.dblClick.apply(this, [target].concat(arguments))
        }
        resultFuture.move = function() {
            exports.move.apply(this, [target].concat(arguments))
        }
        resultFuture.type = function() {
            exports.type.apply(this, [target].concat(arguments))
        }
        resultFuture.key = function() {
            exports.key.apply(this, [target].concat(arguments))
        }

        return resultFuture
    }
}

